{"version":3,"file":"static/js/53.07a53709.chunk.js","mappings":"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","sources":["Components/Register/Register.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nexport default function Register() {\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const validationOnTyping = (e) => {\r\n    let input = e.target;\r\n    let value = input.value;\r\n    let parent = input.parentElement;\r\n    let error = parent.querySelector(\".error\");\r\n    // let success = parent.querySelector(\".success\");\r\n    let inputName = e.target.id;\r\n    let regEx;\r\n    switch (inputName) {\r\n      case \"name\":\r\n        regEx = /^[a-zA-Z0-9]{5,25}$/;\r\n        break;\r\n      case \"email\":\r\n        regEx = /[a-z0-9]+@[a-z]+\\.[a-z]{2,3}/;\r\n        break;\r\n      case \"password\":\r\n        regEx = /^([a-zA-Z0-9@*#]{8,30})$/;\r\n        break;\r\n      case \"confirmPassword\":\r\n        regEx = /^([a-zA-Z0-9@*#]{8,30})$/;\r\n        break;\r\n      case \"avatar\":\r\n        regEx = /https?:\\/\\/.*\\.(?:jpg|jpeg|png|webp|avif|gif|svg)/;\r\n        break;\r\n      default:\r\n    }\r\n    if (regEx.test(value)) {\r\n      if (inputName === \"confirmPassword\") {\r\n        let password = document.querySelector(\"#password\");\r\n        if (password.value === value) {\r\n          error.classList.remove(\"d-block\");\r\n        } else {\r\n          error.classList.add(\"d-block\");\r\n        }\r\n      } else {\r\n        //   success.classList.add(\"d-block\");\r\n        error.classList.remove(\"d-block\");\r\n      }\r\n    } else {\r\n      //   success.classList.remove(\"d-block\");\r\n      error.classList.add(\"d-block\");\r\n    }\r\n  };\r\n\r\n  const validationOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    let data = {\r\n      name: document.querySelector(\"#name\").value,\r\n      email: document.querySelector(\"#email\").value,\r\n      password: document.querySelector(\"#password\").value,\r\n      avatar: document.querySelector(\"#avatar\").value,\r\n    };\r\n    let noerrors = true;\r\n    let inputs = document.querySelectorAll(\"input\");\r\n    let errors = document.querySelectorAll(\".error\");\r\n    // let success = document.querySelectorAll(\".success\");\r\n    // let form = document.querySelector(\"form\");\r\n    let regEx;\r\n    let value;\r\n    let inputName;\r\n    for (let i = 0; i < inputs.length; i++) {\r\n      value = inputs[i].value;\r\n      inputName = inputs[i].id;\r\n      switch (inputName) {\r\n        case \"name\":\r\n          regEx = /^[a-zA-Z0-9]{5,25}$/;\r\n          break;\r\n        case \"email\":\r\n          regEx = /[a-z0-9]+@[a-z]+\\.[a-z]{2,3}/;\r\n          break;\r\n        case \"password\":\r\n          regEx = /^([a-zA-Z0-9@*#]{8,30})$/;\r\n          break;\r\n        case \"confirmPassword\":\r\n          regEx = /^([a-zA-Z0-9@*#]{8,30})$/;\r\n          break;\r\n        case \"avatar\":\r\n          regEx = /https?:\\/\\/.*\\.(?:jpg|jpeg|png|webp|avif|gif|svg)/;\r\n          break;\r\n        default:\r\n      }\r\n      if (regEx.test(value)) {\r\n        if (inputName === \"confirmPassword\") {\r\n          if (value === inputs[2].value) {\r\n            errors[i].classList.remove(\"d-block\");\r\n          } else {\r\n            errors[i].classList.add(\"d-block\");\r\n            noerrors = false;\r\n          }\r\n        } else {\r\n          errors[i].classList.remove(\"d-block\");\r\n        }\r\n        // success[i].classList.add(\"d-block\");\r\n      } else {\r\n        errors[i].classList.add(\"d-block\");\r\n        // success[i].classList.remove(\"d-block\");\r\n        noerrors = false;\r\n      }\r\n    }\r\n    if (noerrors) {\r\n      postData(data);\r\n      //   form.submit();\r\n    }\r\n  };\r\n  const postData = async (userData) => {\r\n    setLoading(true);\r\n    const { data } = await axios.post(\r\n      \"https://api.escuelajs.co/api/v1/users/is-available\",\r\n      userData\r\n    );\r\n    if (data.isAvailable) {\r\n      await axios.post(\"https://api.escuelajs.co/api/v1/users/\", userData);\r\n      // console.log(response);\r\n      navigate(\"/login\");\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Error\",\r\n        text: \"Email is Already Registered!\",\r\n        footer: '<a href=\"\">Why do I have this issue?</a>',\r\n      });\r\n    }\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <div className=\"container p-5 border my-4 rounded\">\r\n      <h1 className=\"secondary-color\">Register</h1>\r\n      <form onSubmit={validationOnSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">\r\n            Name\r\n          </label>\r\n          <input\r\n            onChange={validationOnTyping}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"name\"\r\n          />\r\n          <div className=\"error\">name must be between 5 to 25 character</div>\r\n          <div className=\"success\">success</div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            onChange={validationOnTyping}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n          <div id=\"emailHelp\" className=\"form-text\">\r\n            We'll never share your email with anyone else.\r\n          </div>\r\n          <div className=\"error\">email must be for ex : email@example.com</div>\r\n          <div className=\"success\">success</div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"password\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            onChange={validationOnTyping}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n          />\r\n          <div className=\"error\">\r\n            password must be between 8 to 30 characters\r\n          </div>\r\n          <div className=\"success\">success</div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"confirmPassword\" className=\"form-label\">\r\n            Confirm Password\r\n          </label>\r\n          <input\r\n            onChange={validationOnTyping}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"confirmPassword\"\r\n          />\r\n          <div className=\"error\">\r\n            password confirmation must be the same as password input\r\n          </div>\r\n          <div className=\"success\">success</div>\r\n        </div>\r\n        <div className=\"avatar\">\r\n          <label htmlFor=\"avatar\" className=\"form-label\">\r\n            Profile Image Link\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"avatar\"\r\n            onChange={validationOnTyping}\r\n          />\r\n          <div className=\"error\">\r\n            profile image url must be like https://www.site.com/photo.jpg\r\n          </div>\r\n          <div className=\"success\">success</div>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-secondary mt-3\">\r\n          {loading ? (\r\n            <i className=\"fa-solid fa-spinner fa-spin\"></i>\r\n          ) : (\r\n            \"Sign Up\"\r\n          )}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Register","useState","loading","setLoading","navigate","useNavigate","validationOnTyping","e","regEx","input","target","value","error","parentElement","querySelector","inputName","id","test","document","classList","remove","add","postData","userData","axios","data","isAvailable","Swal","icon","title","text","footer","className","onSubmit","preventDefault","name","email","password","avatar","noerrors","inputs","querySelectorAll","errors","i","length","htmlFor","onChange","type"],"sourceRoot":""}