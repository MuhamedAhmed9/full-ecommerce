{"version":3,"file":"static/js/712.2e0a8607.chunk.js","mappings":"4PAIe,SAASA,EAAMC,GAC5B,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAqB,SAACC,GAC1B,IAMIC,EANAC,EAAQF,EAAEG,OACVC,EAAQF,EAAME,MAEdC,EADSH,EAAMI,cACAC,cAAc,UAIjC,OAFgBP,EAAEG,OAAOK,IAGvB,IAAK,QACHP,EAAQ,+BACR,MACF,IAAK,WACHA,EAAQ,2BAIRA,EAAMQ,KAAKL,GAEbC,EAAMK,UAAUC,OAAO,WAGvBN,EAAMK,UAAUE,IAAI,UAEvB,EA2CKC,EAAQ,yCAAG,WAAOC,GAAP,mFACflB,GAAW,GADI,SAEQmB,IAAAA,KACrB,qDACAD,GAJa,qBAEPE,KAIEC,YANK,iCAOPF,IAAAA,KACE,6CAA8CD,GACnDI,MAAK,SAACC,GAELC,aAAaC,QAAQ,QAASF,EAAIH,KAAKM,cACvC7B,EAAM8B,aAAY,GAClB1B,EAAS,QACV,IACA2B,OAAM,SAACC,GACNC,IAAAA,KAAU,CACRC,KAAM,QACNC,MAAO,QACPC,KAAM,2BACNC,OAAQ,4CAEX,IAtBU,+BAwBbJ,IAAAA,KAAU,CACRC,KAAM,QACNC,MAAO,QACPC,KAAM,2BACNC,OAAQ,6CA5BG,QA+BflC,GAAW,GA/BI,4CAAH,sDAiCd,OACE,iBAAKmC,UAAU,oCAAf,WACE,eAAIA,UAAU,kBAAd,oBACA,kBAAMC,SA7EiB,SAAChC,GAC1BA,EAAEiC,iBAaF,IAZA,IASIhC,EACAG,EAVAY,EAAO,CACTkB,MAAOC,SAAS5B,cAAc,UAAUH,MACxCgC,SAAUD,SAAS5B,cAAc,aAAaH,OAE5CiC,GAAW,EACXC,EAASH,SAASI,iBAAiB,SACnCC,EAASL,SAASI,iBAAiB,UAM9BE,EAAI,EAAGA,EAAIH,EAAOI,OAAQD,IAAK,CAGtC,OAFArC,EAAQkC,EAAOG,GAAGrC,MACNkC,EAAOG,GAAGjC,IAEpB,IAAK,QACHP,EAAQ,+BACR,MACF,IAAK,WACHA,EAAQ,2BAKRA,EAAMQ,KAAKL,GACboC,EAAOC,GAAG/B,UAAUC,OAAO,YAG3B6B,EAAOC,GAAG/B,UAAUE,IAAI,WAExByB,GAAW,EAEd,CACGA,GACFxB,EAASG,EAGZ,EAqCG,WACE,iBAAKe,UAAU,OAAf,WACE,kBAAOY,QAAQ,QAAQZ,UAAU,aAAjC,4BAGA,kBACEa,SAAU7C,EACV8C,KAAK,QACLd,UAAU,eACVvB,GAAG,QACH,mBAAiB,eAEnB,gBAAKuB,UAAU,QAAf,uDACA,gBAAKA,UAAU,UAAf,yBAEF,iBAAKA,UAAU,OAAf,WACE,kBAAOY,QAAQ,WAAWZ,UAAU,aAApC,uBAGA,kBACEa,SAAU7C,EACV8C,KAAK,WACLd,UAAU,eACVvB,GAAG,cAEL,gBAAKuB,UAAU,QAAf,0DAGA,gBAAKA,UAAU,UAAf,yBAGF,mBAAQc,KAAK,SAASd,UAAU,yBAAhC,SACGpC,GACC,cAAGoC,UAAU,gCAEb,iBAMX,C","sources":["Components/Login/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nexport default function Login(props) {\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const validationOnTyping = (e) => {\r\n    let input = e.target;\r\n    let value = input.value;\r\n    let parent = input.parentElement;\r\n    let error = parent.querySelector(\".error\");\r\n    // let success = parent.querySelector(\".success\");\r\n    let inputName = e.target.id;\r\n    let regEx;\r\n    switch (inputName) {\r\n      case \"email\":\r\n        regEx = /[a-z0-9]+@[a-z]+\\.[a-z]{2,3}/;\r\n        break;\r\n      case \"password\":\r\n        regEx = /^([a-zA-Z0-9@*#]{8,30})$/;\r\n        break;\r\n      default:\r\n    }\r\n    if (regEx.test(value)) {\r\n      //   success.classList.add(\"d-block\");\r\n      error.classList.remove(\"d-block\");\r\n    } else {\r\n      //   success.classList.remove(\"d-block\");\r\n      error.classList.add(\"d-block\");\r\n    }\r\n  };\r\n\r\n  const validationOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    let data = {\r\n      email: document.querySelector(\"#email\").value,\r\n      password: document.querySelector(\"#password\").value,\r\n    };\r\n    let noerrors = true;\r\n    let inputs = document.querySelectorAll(\"input\");\r\n    let errors = document.querySelectorAll(\".error\");\r\n    // let success = document.querySelectorAll(\".success\");\r\n    // let form = document.querySelector(\"form\");\r\n    let regEx;\r\n    let value;\r\n    let inputName;\r\n    for (let i = 0; i < inputs.length; i++) {\r\n      value = inputs[i].value;\r\n      inputName = inputs[i].id;\r\n      switch (inputName) {\r\n        case \"email\":\r\n          regEx = /[a-z0-9]+@[a-z]+\\.[a-z]{2,3}/;\r\n          break;\r\n        case \"password\":\r\n          regEx = /^([a-zA-Z0-9@*#]{8,30})$/;\r\n          break;\r\n\r\n        default:\r\n      }\r\n      if (regEx.test(value)) {\r\n        errors[i].classList.remove(\"d-block\");\r\n        // success[i].classList.add(\"d-block\");\r\n      } else {\r\n        errors[i].classList.add(\"d-block\");\r\n        // success[i].classList.remove(\"d-block\");\r\n        noerrors = false;\r\n      }\r\n    }\r\n    if (noerrors) {\r\n      postData(data);\r\n      //   form.submit();\r\n    }\r\n  };\r\n  const postData = async (userData) => {\r\n    setLoading(true);\r\n    const { data } = await axios.post(\r\n      \"https://api.escuelajs.co/api/v1/users/is-available\",\r\n      userData\r\n    );\r\n    if (!data.isAvailable) {\r\n      await axios\r\n        .post(\"https://api.escuelajs.co/api/v1/auth/login\", userData)\r\n        .then((res) => {\r\n          //   console.log(res.data.access_token);\r\n          localStorage.setItem(\"token\", res.data.access_token);\r\n          props.setLoggedIn(true);\r\n          navigate(\"/home\");\r\n        })\r\n        .catch((err) => {\r\n          Swal.fire({\r\n            icon: \"error\",\r\n            title: \"Error\",\r\n            text: \"Password is Not Correct!\",\r\n            footer: '<a href=\"\">Why do I have this issue?</a>',\r\n          });\r\n        });\r\n    } else {\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Error\",\r\n        text: \"Email is Not Registered!\",\r\n        footer: '<a href=\"\">Why do I have this issue?</a>',\r\n      });\r\n    }\r\n    setLoading(false);\r\n  };\r\n  return (\r\n    <div className=\"container p-5 border my-4 rounded\">\r\n      <h1 className=\"secondary-color\">Login</h1>\r\n      <form onSubmit={validationOnSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"email\" className=\"form-label\">\r\n            Email address\r\n          </label>\r\n          <input\r\n            onChange={validationOnTyping}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            id=\"email\"\r\n            aria-describedby=\"emailHelp\"\r\n          />\r\n          <div className=\"error\">email must be for ex : email@example.com</div>\r\n          <div className=\"success\">success</div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"password\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            onChange={validationOnTyping}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            id=\"password\"\r\n          />\r\n          <div className=\"error\">\r\n            password must be between 8 to 30 characters\r\n          </div>\r\n          <div className=\"success\">success</div>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-secondary mt-3\">\r\n          {loading ? (\r\n            <i className=\"fa-solid fa-spinner fa-spin\"></i>\r\n          ) : (\r\n            \"Sign In\"\r\n          )}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["Login","props","useState","loading","setLoading","navigate","useNavigate","validationOnTyping","e","regEx","input","target","value","error","parentElement","querySelector","id","test","classList","remove","add","postData","userData","axios","data","isAvailable","then","res","localStorage","setItem","access_token","setLoggedIn","catch","err","Swal","icon","title","text","footer","className","onSubmit","preventDefault","email","document","password","noerrors","inputs","querySelectorAll","errors","i","length","htmlFor","onChange","type"],"sourceRoot":""}